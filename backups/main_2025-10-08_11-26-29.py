# ~/beautybot/main.py
import asyncio
import logging
import os
from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.filters import Command
from dotenv import load_dotenv

from app.handlers.master_panel import router as master_router
from app.utils.db import init_db, create_booking, get_bookings_by_user

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")

logging.basicConfig(level=logging.INFO)
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
dp.include_router(master_router)

@dp.message(Command("start"))
async def start_handler(message: Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫ –º–∞—Å—Ç–µ—Ä—É.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π /book —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å, –∏–ª–∏ /mybookings —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –∑–∞–ø–∏—Å–∏."
    )

@dp.message(Command("book"))
async def book_handler(message: Message):
    # –î–ª—è —Ç–µ—Å—Ç–∞ —Å–æ–∑–¥–∞—ë–º –±—Ä–æ–Ω—å –≤—Ä—É—á–Ω—É—é
    booking_id = await create_booking(
        user_id=message.from_user.id,
        service_id=1,
        date_str="2025-10-10",
        time_str="12:00"
    )
    if booking_id:
        await message.answer(f"‚úÖ –ó–∞–ø–∏—Å—å #{booking_id} —Å–æ–∑–¥–∞–Ω–∞! –û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞.")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–∞—Å—Ç–µ—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ (–¥–ª—è —Ç–µ—Å—Ç–∞ ‚Äî —Ç–µ–±–µ –∂–µ)
        await bot.send_message(
            message.from_user.id,
            f"üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #{booking_id}\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å?",
            reply_markup=types.InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        types.InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_{booking_id}"),
                        types.InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{booking_id}")
                    ]
                ]
            )
        )
    else:
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏.")

@dp.message(Command("mybookings"))
async def my_bookings_handler(message: Message):
    bookings = await get_bookings_by_user(message.from_user.id)
    if not bookings:
        await message.answer("üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π.")
        return

    text = "üìÖ –í–∞—à–∏ –∑–∞–ø–∏—Å–∏:\n\n"
    for b in bookings:
        text += f"#{b['id']} ‚Äî {b['date']} {b['time']} ({b['status']})\n"
    await message.answer(text)

async def main():
    await init_db()
    await dp.start_polling(bot, handle_signals=False)

if __name__ == "__main__":
    asyncio.run(main())

