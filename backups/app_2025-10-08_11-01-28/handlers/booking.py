# ~/beautybot/app/handlers/booking.py
from aiogram import Router, types
from aiogram.filters import Command
from app.utils.db import get_services, create_booking

router = Router()

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥
@router.message(Command("book"))
async def cmd_book(message: types.Message):
    services = await get_services()
    if not services:
        await message.answer("–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Å–ª—É–≥.")
        return

    keyboard = types.InlineKeyboardMarkup()
    for s in services:
        keyboard.add(
            types.InlineKeyboardButton(
                text=f"{s['name']} ‚Äî {s['price']}‚ÇΩ ({s['duration']} –º–∏–Ω)",
                callback_data=f"service_{s['id']}"
            )
        )
    await message.answer("üíÖ –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É:", reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏
@router.callback_query(lambda c: c.data.startswith("service_"))
async def select_service(callback: types.CallbackQuery):
    service_id = int(callback.data.split("_")[1])
    user_id = callback.from_user.id

    booking_id = await create_booking(user_id, service_id)
    await callback.message.answer(
        f"‚úÖ –í–∞—à–∞ –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞!\nID –±—Ä–æ–Ω–∏: {booking_id}\n–ú–∞—Å—Ç–µ—Ä –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
    )
    await callback.answer()

