from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.database import db
from app.utils.config_loader import MASTER_ID
from app.handlers.loyalty.points_system import add_loyalty_points
import asyncpg

router = Router()

# === 1. –ö–æ–º–∞–Ω–¥–∞ /book ===
@router.message(Command("book"))
async def book_start(message: types.Message):
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="üíÖ –ú–∞–Ω–∏–∫—é—Ä", callback_data="service_–ú–∞–Ω–∏–∫—é—Ä")
    keyboard.button(text="üíá –°—Ç—Ä–∏–∂–∫–∞", callback_data="service_–°—Ç—Ä–∏–∂–∫–∞")
    keyboard.button(text="üíÜ –ú–∞—Å—Å–∞–∂", callback_data="service_–ú–∞—Å—Å–∞–∂")
    keyboard.adjust(1)
    await message.answer("–í—ã–±–µ—Ä–∏ —É—Å–ª—É–≥—É:", reply_markup=keyboard.as_markup())

# === 2. –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ ===
@router.callback_query(F.data.startswith("service_"))
async def choose_time(callback: types.CallbackQuery):
    service = callback.data.split("_", 1)[1]
    keyboard = InlineKeyboardBuilder()
    for time in ["10:00", "12:00", "15:00"]:
        keyboard.button(text=time, callback_data=f"time_{service}_{time}")
    keyboard.adjust(2)
    await callback.message.edit_text(f"–í—ã–±—Ä–∞–Ω–∞ —É—Å–ª—É–≥–∞: {service}\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –≤—Ä–µ–º—è:", reply_markup=keyboard.as_markup())

# === 3. –û—Ç–ø—Ä–∞–≤–∫–∞ –º–∞—Å—Ç–µ—Ä—É –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ ===
@router.callback_query(F.data.startswith("time_"))
async def confirm_booking(callback: types.CallbackQuery):
    _, service, time = callback.data.split("_", 2)
    client_id = callback.from_user.id
    username = callback.from_user.username
    full_name = callback.from_user.full_name

    conn = await asyncpg.connect(db.DATABASE_URL)
    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞ (–µ—Å–ª–∏ –µ–≥–æ –µ—â—ë –Ω–µ—Ç)
    await conn.execute("""
        INSERT INTO clients (id, username, full_name)
        VALUES ($1, $2, $3)
        ON CONFLICT (id) DO NOTHING
    """, client_id, username, full_name)
    # —Å–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å
    await conn.execute("""
        INSERT INTO appointments (client_id, service, datetime, status)
        VALUES ($1, $2, $3, 'pending')
    """, client_id, service, f"2025-10-09 {time}:00")
    await conn.close()

    await callback.message.edit_text(f"‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–∞—Å—Ç–µ—Ä—É –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ!\n–£—Å–ª—É–≥–∞: {service}\n–í—Ä–µ–º—è: {time}")

    # —É–≤–µ–¥–æ–º–ª—è–µ–º –º–∞—Å—Ç–µ—Ä–∞
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"approve_{client_id}_{service}_{time}")
    keyboard.button(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{client_id}_{service}_{time}")
    keyboard.adjust(2)

    await callback.bot.send_message(
        MASTER_ID,
        f"üí¨ –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å:\n–ö–ª–∏–µ–Ω—Ç: {full_name}\n–£—Å–ª—É–≥–∞: {service}\n–í—Ä–µ–º—è: {time}",
        reply_markup=keyboard.as_markup()
    )

# === 4. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–æ–º ===
@router.callback_query(F.data.startswith("approve_"))
async def approve(callback: types.CallbackQuery):
    _, client_id, service, time = callback.data.split("_", 3)
    client_id = int(client_id)

    conn = await asyncpg.connect(db.DATABASE_URL)
    await conn.execute("""
        UPDATE appointments SET status='approved'
        WHERE client_id=$1 AND service=$2 AND datetime=$3
    """, client_id, service, f"2025-10-09 {time}:00")
    await conn.close()

    # –Ω–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å—ã –∫–ª–∏–µ–Ω—Ç—É
    points = await add_loyalty_points(client_id, service)

    await callback.bot.send_message(
        client_id,
        f"‚úÖ –í–∞—à–∞ –∑–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!\nüíÖ –£—Å–ª—É–≥–∞: {service}\nüïê –í—Ä–µ–º—è: {time}\nüéÅ –ù–∞—á–∏—Å–ª–µ–Ω–æ {points} –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤!"
    )
    await callback.message.edit_text(f"‚úÖ –ó–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞: {service}, {time}")

# === 5. –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–æ–º ===
@router.callback_query(F.data.startswith("reject_"))
async def reject(callback: types.CallbackQuery):
    _, client_id, service, time = callback.data.split("_", 3)
    client_id = int(client_id)

    conn = await asyncpg.connect(db.DATABASE_URL)
    await conn.execute("""
        UPDATE appointments SET status='rejected'
        WHERE client_id=$1 AND service=$2 AND datetime=$3
    """, client_id, service, f"2025-10-09 {time}:00")
    await conn.close()

    await callback.bot.send_message(client_id, f"‚ùå –í–∞—à–∞ –∑–∞–ø–∏—Å—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\nüíÖ –£—Å–ª—É–≥–∞: {service}\nüïê –í—Ä–µ–º—è: {time}")
    await callback.message.edit_text(f"üö´ –ó–∞–ø–∏—Å—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞: {service}, {time}")
