from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
import asyncpg
from datetime import datetime, timedelta

from app.utils.config_loader import DATABASE_URL, MASTER_ID

router = Router()

@router.message(Command("book"))
async def book_start(message: types.Message):
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="üíÖ –ú–∞–Ω–∏–∫—é—Ä", callback_data="service_–ú–∞–Ω–∏–∫—é—Ä")
    keyboard.button(text="üíá –°—Ç—Ä–∏–∂–∫–∞", callback_data="service_–°—Ç—Ä–∏–∂–∫–∞")
    keyboard.button(text="üíÜ –ú–∞—Å—Å–∞–∂", callback_data="service_–ú–∞—Å—Å–∞–∂")
    keyboard.adjust(1)
    await message.answer("–í—ã–±–µ—Ä–∏ —É—Å–ª—É–≥—É:", reply_markup=keyboard.as_markup())

@router.callback_query(F.data.startswith("service_"))
async def choose_time(callback: types.CallbackQuery):
    service = callback.data.split("_", 1)[1]

    # –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ - —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∏
    keyboard = InlineKeyboardBuilder()
    for time in ["10:00", "12:30", "15:00"]:
        keyboard.button(text=time, callback_data=f"time_{service}_{time}")
    keyboard.adjust(2)
    await callback.message.edit_text(
        f"–í—ã–±—Ä–∞–Ω–∞ —É—Å–ª—É–≥–∞: {service}\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –≤—Ä–µ–º—è:", reply_markup=keyboard.as_markup()
    )

@router.callback_query(F.data.startswith("time_"))
async def confirm_booking(callback: types.CallbackQuery):
    _, service, time = callback.data.split("_", 2)
    client_id = callback.from_user.id
    username = callback.from_user.username
    full_name = callback.from_user.full_name

    conn = await asyncpg.connect(DATABASE_URL)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    await conn.execute(
        """
        INSERT INTO clients (id, username, full_name)
        VALUES ($1, $2, $3)
        ON CONFLICT (id) DO NOTHING
        """,
        client_id, username, full_name
    )

    # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º —É—Å–ª—É–≥—É
    service_id_row = await conn.fetchrow(
        "SELECT id FROM services WHERE name=$1", service
    )
    if not service_id_row:
        await conn.execute(
            "INSERT INTO services (name, duration_minutes) VALUES ($1, $2)", service, 120
        )
        service_id_row = await conn.fetchrow(
            "SELECT id FROM services WHERE name=$1", service
        )

    service_id = service_id_row['id']

    start_time_str = f"2025-10-09 {time}:00"
    start_time = datetime.strptime(start_time_str, "%Y-%m-%d %H:%M:%S")
    end_time = start_time + timedelta(hours=2)

    # –°–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å
    await conn.execute(
        """
        INSERT INTO appointments (client_id, service_id, start_time, end_time, status)
        VALUES ($1, $2, $3, $4, 'pending')
        """,
        client_id, service_id, start_time, end_time
    )

    await conn.close()

    await callback.message.edit_text(
        f"‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–∞—Å—Ç–µ—Ä—É –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ!\n–£—Å–ª—É–≥–∞: {service}\n–í—Ä–µ–º—è: {time}"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä—É
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"approve_{client_id}_{service_id}_{
