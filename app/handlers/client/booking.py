from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.database.db import DATABASE_URL
import asyncpg
from app.utils.config_loader import MASTER_ID

router = Router()

@router.message(Command("book"))
async def book_start(message: types.Message):
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="üíÖ –ú–∞–Ω–∏–∫—é—Ä", callback_data="service_–ú–∞–Ω–∏–∫—é—Ä")
    keyboard.button(text="üíá –°—Ç—Ä–∏–∂–∫–∞", callback_data="service_–°—Ç—Ä–∏–∂–∫–∞")
    keyboard.button(text="üíÜ –ú–∞—Å—Å–∞–∂", callback_data="service_–ú–∞—Å—Å–∞–∂")
    keyboard.adjust(1)
    await message.answer("–í—ã–±–µ—Ä–∏ —É—Å–ª—É–≥—É:", reply_markup=keyboard.as_markup())

@router.callback_query(F.data.startswith("service_"))
async def choose_time(callback: types.CallbackQuery):
    service = callback.data.split("_", 1)[1]

    # –ó–¥–µ—Å—å –¥–æ–±–∞–≤—å –ª–æ–≥–∏–∫—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ –±–∞–∑—ã, –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –ø–æ–∫–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ
    keyboard = InlineKeyboardBuilder()
    for time in ["10:00", "12:30", "15:00"]:
        keyboard.button(text=time, callback_data=f"time_{service}_{time}")
    keyboard.adjust(2)
    await callback.message.edit_text(f"–í—ã–±—Ä–∞–Ω–∞ —É—Å–ª—É–≥–∞: {service}\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –≤—Ä–µ–º—è:", reply_markup=keyboard.as_markup())

@router.callback_query(F.data.startswith("time_"))
async def confirm_booking(callback: types.CallbackQuery):
    _, service, time = callback.data.split("_", 2)
    client_id = callback.from_user.id
    username = callback.from_user.username
    full_name = callback.from_user.full_name

    conn = await asyncpg.connect(DATABASE_URL)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–Ω—è—Ç–æ—Å—Ç—å –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –≤–æ–∑–º–æ–∂–Ω–∞ –ø–æ–∑–∂–µ (–¥–æ–±–∞–≤–∏—Ç—å)
    
    await conn.execute("""
        INSERT INTO clients (id, username, full_name) VALUES ($1, $2, $3)
        ON CONFLICT (id) DO NOTHING
    """, client_id, username, full_name)

    # –ü–æ–ª—É—á–∞–µ–º service_id –∏–∑ services (—Å–æ–∑–¥–∞–¥–∏–º, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    service_id_row = await conn.fetchrow("SELECT id FROM services WHERE name=$1", service)
    if not service_id_row:
        # –ï—Å–ª–∏ —É—Å–ª—É–≥–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–µ —Å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 120 –º–∏–Ω—É—Ç
        await conn.execute("INSERT INTO services (name, duration_minutes) VALUES ($1, $2)", service, 120)
        service_id_row = await conn.fetchrow("SELECT id FROM services WHERE name=$1", service)

    service_id = service_id_row['id']

    from datetime import datetime
    start_time_str = f"2025-10-09 {time}:00"
    start_time = datetime.strptime(start_time_str, "%Y-%m-%d %H:%M:%S")
    end_time = start_time.replace(minute=start_time.minute + 120)  # +2 —á–∞—Å–∞

    await conn.execute("""
        INSERT INTO appointments (client_id, service_id, start_time, end_time, status)
        VALUES ($1, $2, $3, $4, 'pending')
    """, client_id, service_id, start_time, end_time)

    await conn.close()

    await callback.message.edit_text(f"‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–∞—Å—Ç–µ—Ä—É –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ!\n–£—Å–ª—É–≥–∞: {service}\n–í—Ä–µ–º—è: {time}")

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –º–∞—Å—Ç–µ—Ä–∞
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"approve_{client_id}_{service_id}_{time}")
    keyboard.button(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{client_id}_{service_id}_{time}")
    keyboard.adjust(2)
    await callback.bot.send_message(
        MASTER_ID,
        f"üí¨ –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å:\n–ö–ª–∏–µ–Ω—Ç: {full_name}\n–£—Å–ª—É–≥–∞: {service}\n–í—Ä–µ–º—è: {time}",
        reply_markup=keyboard.as_markup()
    )

# –î–∞–ª–µ–µ –Ω—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å approve –∏ reject, –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å—Ç–∞—Ç—É—Å–∞ –≤ –ë–î
