import asyncio
import logging
import sys
import os

# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ app –≤ –ø—É—Ç–∏
sys.path.append(os.path.join(os.path.dirname(__file__), 'app'))

from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import BotCommand

from app.handlers import start, client_booking, master_panel
from app.utils.db import init_db
from app.keyboards.main_kb import get_main_kb  # –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

TOKEN = os.getenv("BOT_TOKEN") or "—Ç–≤–æ–π_—Ç–æ–∫–µ–Ω_–±–æ—Ç–∞"

bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())

main_kb = get_main_kb()  # –¥–æ–±–∞–≤–ª–µ–Ω–æ

async def set_commands():
    commands = [
        BotCommand(command="start", description="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        BotCommand(command="master", description="–ü–∞–Ω–µ–ª—å –º–∞—Å—Ç–µ—Ä–∞"),
    ]
    await bot.set_my_commands(commands)


async def main():
    logger.info("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î...")
    await init_db()
    logger.info("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

    dp.include_router(start.router)
    dp.include_router(client_booking.router)
    dp.include_router(master_panel.router)

    await set_commands()
    logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")

    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())

